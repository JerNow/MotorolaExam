// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotorolaExam.EntitiesDb.Context;

#nullable disable

namespace MotorolaExam.EntitiesDb.Migrations
{
    [DbContext(typeof(MotorolaExamEntitiesDbContext))]
    partial class MotorolaExamEntitiesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotorolaProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("LaunchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MotoTechStackId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("MotoTechStackId");

                    b.HasIndex("TeamId");

                    b.ToTable("MotorolaProjects", (string)null);
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotorolaTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("MotorolaTeams", (string)null);
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotoTeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MotorolaTeamId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("YearsOfExpierience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotorolaTeamId");

                    b.ToTable("MotoTeamMembers", (string)null);
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotoTechStack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("MotoTechStacks", (string)null);
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("MotorolaProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotorolaProjectId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotorolaProject", b =>
                {
                    b.HasOne("MotorolaExam.EntitiesDb.Models.Entities.MotoTechStack", "MotoTechStack")
                        .WithMany()
                        .HasForeignKey("MotoTechStackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MotorolaExam.EntitiesDb.Models.Entities.MotorolaTeam", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MotoTechStack");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotoTeamMember", b =>
                {
                    b.HasOne("MotorolaExam.EntitiesDb.Models.Entities.MotorolaTeam", null)
                        .WithMany("MotoTeamMembers")
                        .HasForeignKey("MotorolaTeamId");
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.Review", b =>
                {
                    b.HasOne("MotorolaExam.EntitiesDb.Models.Entities.MotorolaProject", null)
                        .WithMany("ListOfReviews")
                        .HasForeignKey("MotorolaProjectId");
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotorolaProject", b =>
                {
                    b.Navigation("ListOfReviews");
                });

            modelBuilder.Entity("MotorolaExam.EntitiesDb.Models.Entities.MotorolaTeam", b =>
                {
                    b.Navigation("MotoTeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
